{{- $fullName := include "library-chart.fullname" . -}}
{{- $teamName := trimSuffix "-data-admins" (trimSuffix "-developers" .Values.dapla.group) }}
{{- $bucketEnv := dict "dev" "test" "test" "test" "prod" "prod" }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "library-chart.fullname" . }}
  annotations:
    dapla.ssb.no/enable-ssbucketeer: "true"
    dapla.ssb.no/impersonate-group: {{ .Values.dapla.group }}
    dapla.ssb.no/service-container-name: {{ .Chart.Name }}
    dapla.ssb.no/access-reason: {{ .Values.dapla.sourceData.reason }}
    dapla.ssb.no/requested-service-duration: {{ .Values.dapla.sourceData.requestedDuration }}
    dapla.ssb.no/mount-standard-buckets: "true"
  labels:
    {{- include "library-chart.labels" . | nindent 4 }}
spec:
{{- if not .Values.autoscaling.enabled }}
  {{- if .Values.global.suspend }}
  replicas: 0
  {{- else }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
{{- end }}
  serviceName: {{ include "library-chart.fullname" . }}
  selector:
    matchLabels:
      {{- include "library-chart.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        {{- if .Values.git.enabled }}
        checksum/git: {{ include (print $.Template.BasePath "/secret-git.yaml") . | sha256sum }}
        {{- end }}
        {{- if .Values.oidc.enabled }}
        checksum/oidc: {{ include (print $.Template.BasePath "/secret-oidc.yaml") . | sha256sum }}
        {{- end }}
        {{- if (include "library-chart.repository.enabled"  .) }}
        checksum/repository: {{ include (print $.Template.BasePath "/configmap-repository.yaml") . | sha256sum }}
        {{- end }}
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "library-chart.selectorLabels" . | nindent 8 }}
    spec:
      volumes:
        - name: home
        {{- if .Values.diskplass.enabled }}
          persistentVolumeClaim:
            claimName: {{ .Values.diskplass.existingClaim | default (include "library-chart.fullname" .) }}
        {{- else }}
          emptyDir: {}
        {{- end }}
        - {{ include "library-chart.oauth2ProxyVolume" . | indent 10 | trim }}
        - name: dshm
          emptyDir:
            medium: Memory
            sizeLimit: 128Mi
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "library-chart.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "europe-west4-docker.pkg.dev/artifact-registry-5n/dapla-lab-docker/onyxia/rstudio:{{ .Values.tjeneste.version }}"
          command: ["/bin/sh","-c"]
          args: ["{{ .Values.init.standardInitPath }} /init"]
          imagePullPolicy: {{ .Values.tjeneste.image.pullPolicy }}
          env:
            {{- include "library-chart.commonEnvVars" . | nindent 12 }}
            - name: KUBERNETES_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: IMAGE_NAME
              value: "europe-west4-docker.pkg.dev/artifact-registry-5n/dapla-lab-docker/onyxia/rstudio:{{ .Values.tjeneste.version }}"
            - name: DAPLA_ENVIRONMENT
              value: {{ .Values.deployEnvironment }}
            - name: DAPLA_REGION
              value: DAPLA_LAB
            - name: DAPLA_SERVICE
              value: R_STUDIO
            - name: PASSWORD
              value: ""
            - name: PROJECT_USER
              value: {{ .Values.environment.user }}
            - name: PROJECT_GROUP
              value: {{ .Values.environment.group }}
            - name: ROOT_PROJECT_DIRECTORY
              value: /home/{{ .Values.environment.user }}/work
            - name: RENV_PATHS_LIBRARY
              value: /home/{{ .Values.environment.user }}/work/.renv
            - name: RENV_PATHS_CACHE
              value: /home/{{ .Values.environment.user }}/work/.renv/cache
            - name: XDG_CONFIG_HOME
              value: /home/{{ .Values.environment.user }}/work/.config
            - name: PIPX_HOME
              value: /home/{{ .Values.environment.user }}/work/.local/pipx
            - name: PIPX_BIN_DIR
              value: /home/{{ .Values.environment.user }}/work/.local/pipx/bin
            - name: STATBANK_BASE_URL
              value: {{ .Values.statbankBaseUrl }}
            - name: STATBANK_ENCRYPT_URL
              value: {{ .Values.statbankEncryptUrl }}
            - name: DAPLA_USER
              value: {{ .Values.daplaUser }}
            {{- if .Values.init.regionInit }}
            - name: REGION_INIT_SCRIPT
              value: {{ .Values.init.regionInit }}
            {{- end }}
            {{- if .Values.init.personalInit }}
            - name: PERSONAL_INIT_SCRIPT
              value: {{ .Values.init.personalInit }}
            {{- end }}
            {{- if .Values.init.personalInitArgs }}
            - name: PERSONAL_INIT_ARGS
              value: {{ .Values.init.personalInitArgs }}
            {{- end }}
            - name: DISABLE_AUTH
              value: "true"
          envFrom:
            {{- if .Values.oidc.enabled }}
            - secretRef:
                name: {{ include "library-chart.secretNameOidc" . }}
            {{- end }}
            {{- if .Values.git.enabled }}
            - secretRef:
                name: {{ include "library-chart.secretNameGit" . }}
            {{- end }}
            {{- if (include "library-chart.repository.enabled"  .) }}
            - configMapRef:
                name: {{ include "library-chart.configMapNameRepository" . }}
            {{- end }}
          livenessProbe:
            httpGet:
              path: /
              port: {{ .Values.networking.service.port }}
          readinessProbe:
            httpGet:
              path: /
              port: {{ .Values.networking.service.port }}
          resources:
            requests:
              cpu: {{ .Values.resources.cpu }}
              memory: {{ .Values.resources.memory }}
            limits: 
              # Memory limit = min(mem_requested * 1.5, mem_requested + 4)
              {{- $requestedmem := .Values.resources.memory | trimSuffix "Gi" | float64}}
              memory: {{ min (mulf 1.5 $requestedmem) (add 4.0 $requestedmem) | int | toString | printf "%vGi" }}
          volumeMounts:
            - mountPath: /home/{{ .Values.environment.user}}/work
              subPath: work
              name: home
            - mountPath: /dev/shm
              name: dshm
        - {{ include "library-chart.oauth2ProxyPod" . | indent 10 | trim }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
